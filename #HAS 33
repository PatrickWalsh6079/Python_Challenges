#HAS 33

'''
Given a list of integers, return True if there are two consecutive 3s, and False if condition is not met.
'''

def has_33(nums):
    counter = 0
    ###########################
    #Starting point for counter
    ###########################
    
    limit = len(nums)-1
    #########################################
    #Limit is the length of the list, minus 1
    #########################################
    
    result = False
    ############################
    #Set initial result to False
    ############################
    ###################################################################
    #Counter must be less than limit, because the if statement compares
    #the integer at a given index, plus the following integer.
    ###################################################################
    while counter < limit:
        ######################################################
        #If statement checks if two consecutive integers are 3
        ######################################################
        if nums[counter] == 3 and nums[counter+1] == 3:
            #######################################
            #If integers are 3s, set result to true 
            #and break out of while loop.
            #######################################
            result = True
            break
        else:
            #############################################
            #If both integers are not 3, add 1 to counter
            #and continue while loop.
            #############################################
            counter += 1
            continue
    return result



# Check1
print(has_33([1, 3, 3]))
#OUTPUT: True

# Check2
print(has_33([3, 1, 3, 3]))
#OUTPUT: True

# Check3
print(has_33([3, 1, 3, 4, 3]))
#OUTPUT: False
